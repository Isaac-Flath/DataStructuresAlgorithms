{
  "hash": "588a0fc65c2135e387678d16ef0e16f1",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Top K Frequent Elements\"\nauthor: \"Isaac Flath\"\ndate: \"2024-02-04\"\ncategories: [array, hash table, bucket sort, counting]\ndescription: \"Given an array get the top k most frequeent elements\"\n---\n\n>Problem Source:  Leetcode\n\n## Problem Description\n\nGiven an integer array `nums` and an integer `k`, return the `k` most frequent elements. You may return the answer in any order.\n\n\n### tests\n\n::: {#5911cd9e .cell execution_count=1}\n``` {.python .cell-code}\ndef test(fn):\n    nums = [1,1,1,2,2,3] \n    k = 2    \n    expected =  [1,2]\n    actual = fn(nums,k)\n    assert actual == expected \n\n    nums = [1]\n    k = 1   \n    expected =  [1]\n    actual = fn(nums,k)\n    assert actual == expected \n```\n:::\n\n\n## Solution\n\n+ Time Complexity: `O(n)`\n+ Space Complexity: `O(n)`\n\n::: {#1944c3de .cell execution_count=2}\n``` {.python .cell-code}\nfrom typing import List\ndef topKFrequent(nums: List[int], k: int) -> List[int]: \n    hashmap = {}\n    for num in nums:\n        # Get a hashmap of counts for each item in num\n        hashmap[num] = 1 + hashmap.get(num,0)\n\n    buckets = [[] for _ in range(len(nums)+1)]\n    for key,val in hashmap.items():\n        # Put nums in a list where index location == occurances\n        buckets[val].append(key)\n\n    output = []\n    for i in range(len(buckets) - 1, 0, -1):\n        # Loop through buckets backward and append to output\n        for num in buckets[i]:\n            output.append(num)\n            if len(output) == k:\n                # When you have k nums you are done\n                return output\n\ntest(topKFrequent)\n```\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}